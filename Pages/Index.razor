@page "/"
@using System.Timers;       // we need this to make sure we get the right type of timer.

<h1>Hello, world!</h1>


<div><button @onclick="handleClick">Click me</button></div>

<div>- @testString -</div>


@code {
    string testString = "";
    System.Timers.Timer myTimer;                    // define the variable myTimer but do not instantiate.

    private void handleClick()
    {
        testString = "Key pressed";

        myTimer = new Timer();                      // now instantiate a timer.

        myTimer.Interval = 5000;                    // setup
        myTimer.Enabled = true;
        myTimer.Elapsed += myTickHandler;
        myTimer.Start();
    }

    private void myTickHandler(Object source, System.Timers.ElapsedEventArgs e)
    {
        testString = "Finished";

        // this bit forces an update of the screen
        InvokeAsync(() =>                           // note that you must use InvokeAsync here
        {
            StateHasChanged();                      // StateHasChanged is the actual command that will for a refesh of the screen
        });

        myTimer.Dispose();                          // note we dispose of the timer once we have finished.

    }

}